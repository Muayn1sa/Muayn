{"version":3,"file":"static/js/902.2b3ce728.chunk.js","mappings":"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","sources":["components/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Container, Paper, Button, TextField, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, Alert, MenuItem } from '@mui/material';\nimport { useAuth } from '../auth/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css'; \n\nfunction Profile() {\n  \n  const saudiCities = [\n    'الرياض',\n    'جدة',\n    'مكة المكرمة',\n    'المدينة المنورة',\n    'الدمام',\n    'الخبر',\n    'الظهران',\n    'الأحساء',\n    'الطائف',\n    'تبوك',\n    'بريدة',\n    'خميس مشيط',\n    'الجبيل',\n    'نجران',\n    'ينبع',\n    'أبها',\n    'حائل',\n    'جيزان',\n    'القطيف',\n    'الباحة',\n    'سكاكا',\n    'عرعر',\n    'الخرج',\n    'اخرى'\n  ].sort();\n\n  const educationLevels = [\n    'ثانوي',\n    'دبلوم',\n    'بكالوريوس',\n    'ماجستير',\n    'دكتوراة',\n    'اخرى'\n  ];\n\n  const saudiUniversities = [\n    'جامعة الملك سعود',\n    'جامعة الملك عبدالعزيز',\n    'جامعة الملك فهد للبترول والمعادن',\n    'جامعة الإمام محمد بن سعود الإسلامية',\n    'جامعة الملك فيصل',\n    'جامعة أم القرى',\n    'جامعة الملك خالد',\n    'جامعة القصيم',\n    'جامعة طيبة',\n    'جامعة الطائف',\n    'جامعة حائل',\n    'جامعة جازان',\n    'جامعة الجوف',\n    'جامعة الباحة',\n    'جامعة تبوك',\n    'جامعة نجران',\n    'جامعة الحدود الشمالية',\n    'جامعة الأميرة نورة بنت عبدالرحمن',\n    'جامعة الملك سعود بن عبدالعزيز للعلوم الصحية',\n    'الجامعة السعودية الإلكترونية',\n    'جامعة المجمعة',\n    'جامعة شقراء',\n    'جامعة الأمير سطام بن عبدالعزيز',\n    'كلية الاتصالات والمعلومات بالرياض',\n    'الكلية التقنية',\n    'كلية المعرفة',\n    'اخرى'\n  ].sort();\n\n  const { currentUser, updateUser, uploadCV } = useAuth();\n  const navigate = useNavigate();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedUser, setEditedUser] = useState(currentUser || {});\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const textFieldStyle = {\n    '& .MuiInputBase-input': { \n      color: 'white',\n      backgroundColor: 'rgba(32, 33, 35, 0.8)',\n      padding: '14px',\n      borderRadius: '8px',\n      textAlign: 'right',\n      height: '1.4em',\n      boxShadow: 'inset 0 2px 4px rgba(0, 0, 0, 0.2)', // إضافة الظل الداخلي\n    },\n    '& .MuiInputLabel-root': { \n      color: 'rgba(255, 255, 255, 0.7)',\n      right: 16,\n      left: 'auto',\n      transformOrigin: 'top right',\n      fontSize: '0.95rem',\n      transition: 'all 0.3s ease',\n      '&.Mui-focused': {\n        color: '#00A783',\n      },\n      '&.MuiInputLabel-shrink': {\n        transform: 'translate(0, -8px) scale(0.75)',\n      }\n    },\n    '& .MuiOutlinedInput-root': {\n      direction: 'rtl',\n      transition: 'all 0.3s ease',\n      '& fieldset': { \n        borderColor: 'rgba(255, 255, 255, 0.2)',\n        borderRadius: '12px',\n        borderWidth: '1px',\n        textAlign: 'right',\n      },\n      '& legend': {\n        width: 0,\n      },\n      '&:hover fieldset': { \n        borderColor: '#00A783',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#00A783',\n        borderWidth: '2px',\n      },\n    },\n    marginBottom: '20px',\n  };\n\n  const multilineFieldStyle = {\n    ...textFieldStyle,\n    '& .MuiInputBase-input': {\n      ...textFieldStyle['& .MuiInputBase-input'],\n      height: 'auto',\n      minHeight: '80px',\n    }\n  };\n\n  const buttonStyle = {\n    bgcolor: '#00A783',\n    color: '#FFFFFF',\n    borderRadius: '12px',\n    padding: '12px 24px',\n    fontSize: '1rem',\n    fontWeight: 500,\n    transition: 'all 0.3s ease',\n    textTransform: 'none',\n    boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    '&:hover': {\n      bgcolor: '#009975',\n      boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n      transform: 'translateY(-1px)',\n    }\n  };\n\n  const dialogStyle = {\n    '& .MuiDialog-paper': {\n      bgcolor: 'rgba(32, 33, 35, 0.95)',\n      color: 'white',\n      minWidth: { xs: '90%', sm: '500px' }, // Adjust minWidth for mobile\n      borderRadius: '16px',\n      backdropFilter: 'blur(10px)',\n      boxShadow: '0 8px 32px rgba(0,0,0,0.3)',\n      maxHeight: '90vh', // Limit height for better mobile view\n      overflowY: 'auto', // Enable scrolling if content overflows\n    }\n  };\n\n  const paperStyle = {\n    p: 4,\n    bgcolor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: '16px',\n    color: 'white',\n    boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n    backdropFilter: 'blur(5px)',\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbar({ ...snackbar, open: false });\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  const validateForm = () => {\n    // التحقق من الاسم\n    const nameRegex = /^[\\u0600-\\u06FF\\s]+$/;\n    const nameWords = editedUser.name?.trim().split(/\\s+/) || [];\n    if (!editedUser.name || nameWords.length < 3 || !nameRegex.test(editedUser.name)) {\n      setSnackbar({\n        open: true,\n        message: 'الاسم يجب أن يحتوي على ثلاث كلمات على الأقل وبدون أرقام وباللغة العربية',\n        severity: 'error'\n      });\n      return false;\n    }\n\n    // التحقق من البريد الإلكتروني\n    if (editedUser.email !== currentUser.email) {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const emailExists = users.some(user => user.email === editedUser.email);\n      if (emailExists) {\n        setSnackbar({\n          open: true,\n          message: 'البريد الإلكتروني مستخدم مسبقاً',\n          severity: 'error'\n        });\n        return false;\n      }\n    }\n\n    // التحقق من رقم الجوال\n    const phoneRegex = /^[0-9]{9}$/;\n    if (!phoneRegex.test(editedUser.phone)) {\n      setSnackbar({\n        open: true,\n        message: 'رقم الجوال يجب أن يتكون من 9 أرقام فقط',\n        severity: 'error'\n      });\n      return false;\n    }\n\n    // التحقق من وجود رقم الجوال مسبقاً\n    if (editedUser.phone !== currentUser.phone) {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const phoneExists = users.some(user => user.phone === editedUser.phone);\n      if (phoneExists) {\n        setSnackbar({\n          open: true,\n          message: 'رقم الجوال مستخدم مسبقاً',\n          severity: 'error'\n        });\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  const handleEdit = () => {\n    setEditedUser(currentUser || {});\n    setIsEditing(true);\n  };\n\n  const handleSave = async () => {\n    if (!validateForm()) return;\n\n    // تحديث المستخدم في Local Storage\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const userIndex = users.findIndex(u => u.email === currentUser.email);\n    \n    if (userIndex !== -1) {\n      const updatedUser = {\n        ...users[userIndex],\n        ...editedUser,\n        name: editedUser.name,\n        fullName: editedUser.name\n      };\n      \n      users[userIndex] = updatedUser;\n      localStorage.setItem('users', JSON.stringify(users));\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      // تحديث حالة المستخدم في التطبيق\n      await updateUser(updatedUser);\n      \n      // إظهار رسالة نجاح\n      setSnackbar({\n        open: true,\n        message: 'تم تحديث المعلومات بنجاح',\n        severity: 'success'\n      });\n      \n      // إغلاق نافذة التعديل\n      setIsEditing(false);\n      \n      // إعادة تحميل الصفحة لتحديث البيانات\n      window.location.reload();\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" sx={{ px: { xs: 2, sm: 3, md: 4 } }}>\n      <Box sx={{\n        marginTop: { xs: 6, sm: 8, md: 10 }, // Increased marginTop for more space\n        marginBottom: { xs: 4, sm: 6, md: 8 },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'rgba(32, 33, 35, 0.5)',\n        borderRadius: '16px',\n        padding: { xs: '16px', sm: '24px', md: '32px' },\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n        gap: '24px'\n      }}>\n        <Typography component=\"h1\" variant=\"h4\" sx={{ \n          color: 'white', \n          mb: 2, \n          fontWeight: 700,\n          fontSize: { xs: '1.5rem', sm: '2rem', md: '2.5rem' }\n        }}>\n          الملف الشخصي\n        </Typography>\n\n        <Box sx={{ width: '100%', color: 'white', direction: 'rtl' }}>\n          <Paper sx={{ \n            p: { xs: 2, sm: 3, md: 4 },\n            bgcolor: 'rgba(255, 255, 255, 0.1)', \n            borderRadius: 3,\n            color: 'white',\n            mb: 4\n          }}>\n            <Typography variant=\"body1\" sx={{ \n              mb: 3, \n              textAlign: 'right', \n              fontWeight: 700,\n              fontSize: '1.2rem',\n              color: 'white',\n              display: 'block',\n              borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n              paddingBottom: '8px'\n            }}>\n              الاسم: {currentUser?.name || currentUser?.fullName}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              البريد الإلكتروني: {currentUser.email}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              رقم الجوال: {currentUser.phone ? `0${currentUser.phone}` : 'لم يتم تسجيل رقم الجوال'}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              العمر: {currentUser.age}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              المدينة: {currentUser.city}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              الحي: {currentUser.district}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              المؤهل العلمي: {currentUser.education}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              الجامعة: {currentUser.university}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              الخبرات: {currentUser.experience}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, textAlign: 'right' }}>\n              من ذوي الاحتياجات الخاصة: {currentUser.isDisabled ? 'نعم' : 'لا'}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 3, textAlign: 'right' }}>\n              لديه خبرة عمل سابقة: {currentUser.hasWorkedBefore ? 'نعم' : 'لا'}\n            </Typography>\n\n            <Button \n              variant=\"contained\" \n              fullWidth\n              onClick={handleEdit}\n              sx={buttonStyle}\n            >\n              تعديل المعلومات\n            </Button>\n          </Paper>\n        </Box>\n      </Box>\n\n      <Dialog \n        open={isEditing} \n        onClose={handleCancel} \n        maxWidth=\"sm\" \n        fullWidth\n        sx={dialogStyle}\n      >\n        <DialogTitle sx={{ textAlign: 'right', borderBottom: '1px solid rgba(255, 255, 255, 0.1)' }}>\n          تعديل المعلومات\n        </DialogTitle>\n        <DialogContent sx={{ mt: { xs: 2, sm: 3, md: 4 } }}>\n          <Box sx={{ direction: 'rtl' }}>\n            <TextField\n              fullWidth\n              label=\"الاسم\"\n              value={editedUser?.name || editedUser?.fullName || ''}\n              onChange={(e) => setEditedUser({ \n                ...editedUser, \n                name: e.target.value,\n                fullName: e.target.value\n              })}\n              sx={{\n                ...textFieldStyle,\n                mt: 2  // إضافة مسافة إضافية فوق حقل الاسم\n              }}\n            />\n            <TextField\n              fullWidth\n              label=\"البريد الإلكتروني\"\n              value={editedUser.email || ''}\n              onChange={(e) => {\n                const value = e.target.value.replace(/[^a-zA-Z0-9@._-]/g, '');\n                setEditedUser({ ...editedUser, email: value.toLowerCase() });\n              }}\n              inputProps={{\n                style: { \n                  direction: 'ltr',\n                  textAlign: 'left'\n                }\n              }}\n              sx={textFieldStyle}\n            />\n            <TextField\n              fullWidth\n              label=\"رقم الجوال\"\n              value={editedUser.phone || 'لم يتم تسجيل رقم الجوال'}\n              onChange={(e) => {\n                const value = e.target.value.replace(/\\D/g, '').slice(0, 9);\n                setEditedUser({ ...editedUser, phone: value });\n              }}\n              InputProps={{\n                startAdornment: <span style={{\n                  color: 'white', \n                  position: 'absolute',\n                  left: '12px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  pointerEvents: 'none'\n                }}>+966</span>\n              }}\n              sx={{\n                ...textFieldStyle,\n                '& .MuiInputBase-input': {\n                  ...textFieldStyle['& .MuiInputBase-input'],\n                  paddingLeft: '52px',\n                  paddingRight: '14px'\n                }\n              }}\n            />\n            <TextField\n              fullWidth\n              label=\"العمر\"\n              type=\"text\"\n              value={editedUser.age || ''}\n              onChange={(e) => {\n                const value = e.target.value.replace(/[^0-9]/g, '');\n                setEditedUser({ ...editedUser, age: value });\n              }}\n              inputProps={{ \n                inputMode: 'numeric',\n                pattern: '[0-9]*',\n                style: { \n                  textAlign: 'right',\n                  direction: 'ltr'\n                }\n              }}\n              sx={textFieldStyle}\n            />\n            <TextField\n              select // تحويل الحقل إلى قائمة منسدلة\n              fullWidth\n              label=\"المدينة\"\n              value={editedUser.city || ''}\n              onChange={(e) => setEditedUser({ ...editedUser, city: e.target.value })}\n              sx={{\n                ...textFieldStyle,\n                '& .MuiSelect-icon': {\n                  color: 'rgba(255, 255, 255, 0.7)'\n                }\n              }}\n              SelectProps={{\n                MenuProps: {\n                  PaperProps: {\n                    sx: {\n                      bgcolor: 'rgba(32, 33, 35, 0.95)',\n                      color: 'white',\n                      '& .MuiMenuItem-root': {\n                        direction: 'rtl',\n                        textAlign: 'right',\n                        '&:hover': {\n                          bgcolor: 'rgba(255, 255, 255, 0.1)'\n                        },\n                        '&.Mui-selected': {\n                          bgcolor: 'rgba(0, 167, 131, 0.2)',\n                          '&:hover': {\n                            bgcolor: 'rgba(0, 167, 131, 0.3)'\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }}\n            >\n              {saudiCities.map((city) => (\n                <MenuItem key={city} value={city}>\n                  {city}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"الحي\"\n              value={editedUser.district || ''}\n              onChange={(e) => setEditedUser({ ...editedUser, district: e.target.value })}\n              sx={textFieldStyle}\n            />\n            <TextField\n              select\n              fullWidth\n              label=\"المؤهل العلمي\"\n              value={editedUser.education || ''}\n              onChange={(e) => setEditedUser({ ...editedUser, education: e.target.value })}\n              sx={{\n                ...textFieldStyle,\n                '& .MuiSelect-icon': {\n                  color: 'rgba(255, 255, 255, 0.7)'\n                }\n              }}\n              SelectProps={{\n                MenuProps: {\n                  PaperProps: {\n                    sx: {\n                      bgcolor: 'rgba(32, 33, 35, 0.95)',\n                      color: 'white',\n                      '& .MuiMenuItem-root': {\n                        direction: 'rtl',\n                        textAlign: 'right',\n                        '&:hover': {\n                          bgcolor: 'rgba(255, 255, 255, 0.1)'\n                        },\n                        '&.Mui-selected': {\n                          bgcolor: 'rgba(0, 167, 131, 0.2)',\n                          '&:hover': {\n                            bgcolor: 'rgba(0, 167, 131, 0.3)'\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }}\n            >\n              {educationLevels.map((level) => (\n                <MenuItem key={level} value={level}>\n                  {level}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              select\n              fullWidth\n              label=\"الجامعة\"\n              value={editedUser.university || ''}\n              onChange={(e) => setEditedUser({ ...editedUser, university: e.target.value })}\n              sx={{\n                ...textFieldStyle,\n                '& .MuiSelect-icon': {\n                  color: 'rgba(255, 255, 255, 0.7)'\n                }\n              }}\n              SelectProps={{\n                MenuProps: {\n                  PaperProps: {\n                    sx: {\n                      bgcolor: 'rgba(32, 33, 35, 0.95)',\n                      color: 'white',\n                      '& .MuiMenuItem-root': {\n                        direction: 'rtl',\n                        textAlign: 'right',\n                        '&:hover': {\n                          bgcolor: 'rgba(255, 255, 255, 0.1)'\n                        },\n                        '&.Mui-selected': {\n                          bgcolor: 'rgba(0, 167, 131, 0.2)',\n                          '&:hover': {\n                            bgcolor: 'rgba(0, 167, 131, 0.3)'\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }}\n            >\n              {saudiUniversities.map((university) => (\n                <MenuItem key={university} value={university}>\n                  {university}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"الخبرات\"\n              multiline\n              rows={3}\n              value={editedUser.experience || ''}\n              onChange={(e) => setEditedUser({ ...editedUser, experience: e.target.value })}\n              sx={multilineFieldStyle}\n            />\n            <Box sx={{ mb: 2 }}>\n              <Typography sx={{ mb: 1 }}>من ذوي الاحتياجات الخاصة:</Typography>\n              <Button\n                variant={editedUser.isDisabled ? \"contained\" : \"outlined\"}\n                onClick={() => setEditedUser({ ...editedUser, isDisabled: true })}\n                sx={{ \n                  ml: 1,\n                  bgcolor: editedUser.isDisabled ? '#00A783' : 'transparent',\n                  color: 'white',\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\n                  '&:hover': {\n                    bgcolor: editedUser.isDisabled ? '#009975' : 'rgba(255, 255, 255, 0.1)',\n                    borderColor: 'white'\n                  }\n                }}\n              >\n                نعم\n              </Button>\n              <Button\n                variant={!editedUser.isDisabled ? \"contained\" : \"outlined\"}\n                onClick={() => setEditedUser({ ...editedUser, isDisabled: false })}\n                sx={{ \n                  bgcolor: !editedUser.isDisabled ? '#00A783' : 'transparent',\n                  color: 'white',\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\n                  '&:hover': {\n                    bgcolor: !editedUser.isDisabled ? '#009975' : 'rgba(255, 255, 255, 0.1)',\n                    borderColor: 'white'\n                  }\n                }}\n              >\n              \n                لا\n              </Button>\n            </Box>\n            <Box sx={{ mb: 2 }}>\n              <Typography sx={{ mb: 1 }}>لديه خبرة عمل سابقة:</Typography>\n              <Button\n                variant={editedUser.hasWorkedBefore ? \"contained\" : \"outlined\"}\n                onClick={() => setEditedUser({ ...editedUser, hasWorkedBefore: true })}\n                sx={{ \n                  ml: 1,\n                  bgcolor: editedUser.hasWorkedBefore ? '#00A783' : 'transparent',\n                  color: 'white',\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\n                  '&:hover': {\n                    bgcolor: editedUser.hasWorkedBefore ? '#009975' : 'rgba(255, 255, 255, 0.1)',\n                    borderColor: 'white'\n                  }\n                }}\n              >\n                نعم\n              </Button>\n              <Button\n                variant={!editedUser.hasWorkedBefore ? \"contained\" : \"outlined\"}\n                onClick={() => setEditedUser({ ...editedUser, hasWorkedBefore: false })}\n                sx={{ \n                  bgcolor: !editedUser.hasWorkedBefore ? '#00A783' : 'transparent',\n                  color: 'white',\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\n                  '&:hover': {\n                    bgcolor: !editedUser.hasWorkedBefore ? '#009975' : 'rgba(255, 255, 255, 0.1)',\n                    borderColor: 'white'\n                  }\n                }}\n              >\n                لا\n              </Button>\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions sx={{ borderTop: '1px solid rgba(255, 255, 255, 0.1)', p: { xs: 1, sm: 2 } }}>\n          <Button onClick={handleCancel} sx={{ color: 'white' }}>\n            إلغاء\n          </Button>\n          <Button \n            onClick={handleSave} \n            variant=\"contained\" \n            sx={{ \n              bgcolor: '#00A783',\n              '&:hover': {\n                bgcolor: '#009975'\n              }\n            }}\n          >\n            حفظ\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      <Snackbar \n        open={snackbar.open} \n        autoHideDuration={6000} \n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={handleCloseSnackbar} \n          severity={snackbar.severity}\n          sx={{ width: '100%', direction: 'rtl' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n\nexport default Profile;"],"names":["saudiCities","sort","saudiUniversities","currentUser","updateUser","uploadCV","useAuth","isEditing","setIsEditing","useNavigate","useState","editedUser","setEditedUser","snackbar","setSnackbar","open","message","severity","textFieldStyle","color","backgroundColor","padding","borderRadius","textAlign","height","boxShadow","right","left","transformOrigin","fontSize","transition","transform","direction","borderColor","borderWidth","width","marginBottom","multilineFieldStyle","minHeight","handleCloseSnackbar","handleCancel","_jsxs","Container","component","maxWidth","sx","px","xs","sm","md","children","Box","marginTop","display","flexDirection","alignItems","gap","_jsx","Typography","variant","mb","fontWeight","Paper","p","bgcolor","borderBottom","paddingBottom","name","fullName","email","phone","age","city","district","education","university","experience","isDisabled","hasWorkedBefore","Button","fullWidth","onClick","handleEdit","textTransform","Dialog","onClose","minWidth","backdropFilter","maxHeight","overflowY","DialogTitle","DialogContent","mt","TextField","label","value","onChange","e","target","replace","toLowerCase","inputProps","style","slice","InputProps","startAdornment","position","top","pointerEvents","paddingLeft","paddingRight","type","inputMode","pattern","select","SelectProps","MenuProps","PaperProps","map","MenuItem","level","multiline","rows","ml","DialogActions","borderTop","async","validateForm","_editedUser$name","nameWords","trim","split","length","test","JSON","parse","localStorage","getItem","some","user","users","userIndex","findIndex","u","updatedUser","setItem","stringify","window","location","reload","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}