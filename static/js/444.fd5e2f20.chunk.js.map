{"version":3,"file":"static/js/444.fd5e2f20.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","components/Manger.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","// Manager.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, List, ListItem, ListItemText, Paper, IconButton } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useMessages } from '../context/MessageContext';  // تأكد من المسار الصحيح\r\n\r\nfunction Manager() {\r\n  const { messages, setMessages } = useMessages();  // استخدام الـ Context\r\n\r\n  useEffect(() => {\r\n    // Fetch messages from the server when the component mounts\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch('/api/messages'); // Use relative path to fetch from the server\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setMessages(data.messages);\r\n        }\r\n      } catch (error) {\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [setMessages]);\r\n\r\n  return (\r\n    <Box sx={{ p: 10 }}>\r\n      <Typography variant=\"h4\" sx={{ mb: 4, textAlign: 'center' }}>\r\n        إدارة الموقع\r\n      </Typography>\r\n      <Paper sx={{ p: 2, direction: 'rtl' }}>\r\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n          الرسائل الواردة\r\n        </Typography>\r\n        <List>\r\n          {messages.map((message, index) => (\r\n            <ListItem key={index} secondaryAction={\r\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => setMessages(prevMessages => prevMessages.filter((_, i) => i !== index))}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            }>\r\n              <ListItemText\r\n                primary={`من: ${message.name} (${message.email})`}\r\n                secondary={`رسالة: ${message.message}`}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Manager;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'loading', 'loadingIndicator', 'loadingWrapper']);\nexport default iconButtonClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport CircularProgress from \"../CircularProgress/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport iconButtonClasses, { getIconButtonUtilityClass } from \"./iconButtonClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size,\n    loading\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    loadingIndicator: ['loadingIndicator'],\n    loadingWrapper: ['loadingWrapper']\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.loading && styles.loading, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: props => !props.disableRipple,\n    style: {\n      '--IconButton-hoverBg': theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n      '&:hover': {\n        backgroundColor: 'var(--IconButton-hoverBg)',\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }, {\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }]\n})), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: 'inherit'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--IconButton-hoverBg': theme.vars ? `rgba(${(theme.vars || theme).palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha((theme.vars || theme).palette[color].main, theme.palette.action.hoverOpacity)\n    }\n  })), {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: 5,\n      fontSize: theme.typography.pxToRem(18)\n    }\n  }, {\n    props: {\n      size: 'large'\n    },\n    style: {\n      padding: 12,\n      fontSize: theme.typography.pxToRem(28)\n    }\n  }],\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  [`&.${iconButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n})));\nconst IconButtonLoadingIndicator = styled('span', {\n  name: 'MuiIconButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => styles.loadingIndicator\n})(({\n  theme\n}) => ({\n  display: 'none',\n  position: 'absolute',\n  visibility: 'visible',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  color: (theme.vars || theme).palette.action.disabled,\n  variants: [{\n    props: {\n      loading: true\n    },\n    style: {\n      display: 'flex'\n    }\n  }]\n}));\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium',\n    id: idProp,\n    loading = null,\n    loadingIndicator: loadingIndicatorProp,\n    ...other\n  } = props;\n  const loadingId = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp ?? /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": loadingId,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = {\n    ...props,\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    loading,\n    loadingIndicator,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(IconButtonRoot, {\n    id: loading ? loadingId : idProp,\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled || loading,\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: [typeof loading === 'boolean' &&\n    /*#__PURE__*/\n    // use plain HTML span to minimize the runtime overhead\n    _jsx(\"span\", {\n      className: classes.loadingWrapper,\n      style: {\n        display: 'contents'\n      },\n      children: /*#__PURE__*/_jsx(IconButtonLoadingIndicator, {\n        className: classes.loadingIndicator,\n        ownerState: ownerState,\n        children: loading && loadingIndicator\n      })\n    }), children]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is visible and the button is disabled.\n   * If `true | false`, the loading wrapper is always rendered before the children to prevent [Google Translation Crash](https://github.com/mui/material-ui/issues/27853).\n   * @default null\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default, it renders a `CircularProgress` that is labeled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["createSvgIcon","_jsx","d","messages","setMessages","useMessages","useEffect","async","response","fetch","data","json","success","error","fetchMessages","_jsxs","Box","sx","p","children","Typography","variant","mb","textAlign","Paper","direction","List","map","message","index","ListItem","secondaryAction","IconButton","edge","onClick","prevMessages","filter","_","i","DeleteIcon","ListItemText","primary","name","email","secondary","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","IconButtonRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","root","loading","color","capitalize","size","memoTheme","_ref","theme","flex","fontSize","typography","pxToRem","padding","borderRadius","vars","palette","action","active","transition","transitions","create","duration","shortest","variants","disableRipple","style","activeChannel","hoverOpacity","alpha","backgroundColor","marginLeft","marginRight","_ref2","Object","entries","createSimplePaletteValueFilter","_ref3","main","_ref4","mainChannel","iconButtonClasses","disabled","IconButtonLoadingIndicator","loadingIndicator","_ref5","display","position","visibility","top","left","transform","React","inProps","ref","useDefaultProps","className","disableFocusRipple","id","idProp","loadingIndicatorProp","other","loadingId","useId","CircularProgress","classes","slots","loadingWrapper","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}