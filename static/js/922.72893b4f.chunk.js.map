{"version":3,"file":"static/js/922.72893b4f.chunk.js","mappings":"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","sources":["components/LoginP.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Typography, Container, Alert, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../auth/AuthContext';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const { login, currentUser, resetPassword } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [resetEmail, setResetEmail] = useState('');\r\n  const [openResetDialog, setOpenResetDialog] = useState(false);\r\n  const [resetMessage, setResetMessage] = useState('');\r\n  const theme = useTheme();\r\n  const isDarkMode = theme.palette.mode === 'dark';\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser) {\r\n      navigate('/');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n  \r\n    if (!formData.email || !formData.password) {\r\n      setError('الرجاء إدخال جميع البيانات المطلوبة');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const success = await login(formData.email, formData.password);\r\n      if (success) {\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        const currentUserData = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUserData) {\r\n          if (currentUserData.subscription === 'شريك مُعين') {\r\n            console.log('User has شريك مُعين membership');\r\n            // You can add additional logic here if needed\r\n          }\r\n          navigate('/', { replace: true });\r\n        } else {\r\n          setError('حدث خطأ أثناء تسجيل الدخول');\r\n        }\r\n      } else {\r\n        setError('البريد الإلكتروني أو كلمة المرور غير صحيحة');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError('حدث خطأ أثناء تسجيل الدخول');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    try {\r\n      await resetPassword(resetEmail);\r\n      setResetMessage('تم إرسال رابط إعادة تعيين كلمة المرور إلى بريدك الإلكتروني');\r\n      setTimeout(() => {\r\n        setOpenResetDialog(false);\r\n        setResetMessage('');\r\n      }, 3000);\r\n    } catch (error) {\r\n      setResetMessage('حدث خطأ أثناء إرسال رابط إعادة التعيين');\r\n    }\r\n  };\r\n\r\n  const textFieldStyle = {\r\n    '& .MuiInputBase-root': {\r\n      height: 'auto',\r\n      color: isDarkMode ? 'white' : '#333',\r\n      backgroundColor: isDarkMode ? '#2A2B32' : '#f5f5f5',\r\n      fontWeight: 600,\r\n      borderRadius: '8px',\r\n    },\r\n    '& .MuiInputBase-input': { \r\n      color: isDarkMode ? 'white' : '#333',\r\n      direction: 'rtl',\r\n      padding: '16px',\r\n      textAlign: 'right',\r\n      fontWeight: 600\r\n    },\r\n    '& .MuiInputLabel-root': { \r\n      color: isDarkMode ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.7)',\r\n      right: 25,\r\n      left: 'auto',\r\n      transformOrigin: 'right top',\r\n      position: 'absolute',\r\n      fontWeight: 600,\r\n      zIndex: 1\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': { \r\n        borderColor: isDarkMode ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.2)',\r\n        borderRadius: '8px',\r\n      },\r\n      '&:hover fieldset': { \r\n        borderColor: '#147a5c',\r\n      },\r\n      '&.Mui-focused fieldset': { \r\n        borderColor: '#147a5c',\r\n        borderWidth: '2px',\r\n      }\r\n    },\r\n    marginBottom: '16px'\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit}\r\n        sx={{\r\n          marginTop: 12,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          backgroundColor: isDarkMode ? 'rgba(18, 18, 18, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n          padding: 4,\r\n          borderRadius: 2,\r\n          backdropFilter: 'blur(10px)',\r\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.2)',\r\n        }}\r\n      >\r\n        {error && <Alert severity=\"error\" sx={{ width: '100%', mb: 2 }}>{error}</Alert>}\r\n        \r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"البريد الإلكتروني\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          sx={textFieldStyle}\r\n        />\r\n        \r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"كلمة المرور\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          sx={textFieldStyle}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{\r\n            mt: 3,\r\n            mb: 2,\r\n            bgcolor: '#147a5c',\r\n            fontSize: { xs: '1rem', sm: '1.1rem' },\r\n            py: { xs: 1.5, sm: 2 },\r\n            '&:hover': {\r\n              bgcolor: '#0d8c6d'\r\n            }\r\n          }}\r\n        >\r\n          دخول\r\n        </Button>\r\n\r\n        <Box sx={{ width: '100%', display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n          <Button\r\n            component={Link}\r\n            to=\"/register\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            sx={{\r\n              color: '#147a5c',\r\n              borderColor: '#147a5c',\r\n              '&:hover': {\r\n                borderColor: '#0d8c6d',\r\n                bgcolor: 'rgba(20, 122, 92, 0.1)'\r\n              }\r\n            }}\r\n          >\r\n            تسجيل حساب جديد\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => setOpenResetDialog(true)}\r\n            sx={{\r\n              color: '#147a5c',\r\n              '&:hover': {\r\n                bgcolor: 'rgba(20, 122, 92, 0.1)'\r\n              }\r\n            }}\r\n          >\r\n            نسيت كلمة المرور؟\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Dialog open={openResetDialog} onClose={() => setOpenResetDialog(false)}>\r\n        <DialogTitle sx={{ textAlign: 'center' }}>استعادة كلمة المرور</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"البريد الإلكتروني\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={resetEmail}\r\n            onChange={(e) => setResetEmail(e.target.value)}\r\n            sx={textFieldStyle}\r\n          />\r\n          {resetMessage && (\r\n            <Alert severity={resetMessage.includes('خطأ') ? 'error' : 'success'} sx={{ mt: 2 }}>\r\n              {resetMessage}\r\n            </Alert>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n          <Button onClick={() => setOpenResetDialog(false)} sx={{ color: '#666' }}>\r\n            إلغاء\r\n          </Button>\r\n          <Button onClick={handleResetPassword} variant=\"contained\" sx={{ bgcolor: '#147a5c', '&:hover': { bgcolor: '#0d8c6d' } }}>\r\n            إرسال رابط الاستعادة\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;"],"names":["navigate","useNavigate","login","currentUser","resetPassword","useAuth","error","setError","useState","resetEmail","setResetEmail","openResetDialog","setOpenResetDialog","resetMessage","setResetMessage","isDarkMode","useTheme","palette","mode","formData","setFormData","email","password","React","textFieldStyle","height","color","backgroundColor","fontWeight","borderRadius","direction","padding","textAlign","right","left","transformOrigin","position","zIndex","borderColor","borderWidth","marginBottom","_jsxs","Container","component","maxWidth","children","Box","onSubmit","async","e","preventDefault","Promise","resolve","setTimeout","currentUserData","JSON","parse","localStorage","getItem","subscription","console","log","replace","err","sx","marginTop","display","flexDirection","alignItems","backdropFilter","boxShadow","_jsx","Alert","severity","width","mb","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","type","Button","variant","mt","bgcolor","fontSize","xs","sm","py","gap","Link","to","onClick","Dialog","open","onClose","DialogTitle","DialogContent","includes","DialogActions","justifyContent","pb"],"sourceRoot":""}